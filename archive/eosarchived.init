#!/bin/bash
#
#-------------------------------------------------------------------------------
# File: eosarchiverd.init
# Author: Elvin-Alin Sindrilaru <esindril@cern.ch>
#-------------------------------------------------------------------------------
#
#*******************************************************************************
# EOS - the CERN Disk Storage System
# Copyright (C) 2014 CERN/Switzerland
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#*******************************************************************************
# chkconfig: 345 95 5
# description: EOS archive daemon init script
# ------------------------------------------------------------------------------

# Source function library
. /etc/rc.d/init.d/functions

# Daemon specific variables
NAME="eosarchived"
DAEMON=/usr/bin/$NAME.py
PIDFILE=/var/run/$NAME.pid
LOCKFILE=/var/lock/subsys/$NAME
RETVAL=0

# Source sysconfig files
if [ -f /etc/sysconfig/$NAME ]; then
    . /etc/sysconfig/$NAME
else
    echo -n "File /etc/sysconfig/$NAME not found"
    echo_failure
    echo
    exit 6
fi

start() {
    # Check if the file is executable
    [ -x $DAEMON ] || exit 5

    # Check the status of the process
    if [ -e ${PIDFILE} ]; then
	status -p $PIDFILE $DAEMON && status="0" || status="$?"
	# If status is SUCCESS, we don't need to start again
	if [ $status = "0" ]; then
	    exit
	fi
    fi

    # Start the daemon
    daemon --user=$USER $DAEMON $EOSARCHIVERD_OPTIONS

    # Write the pid to a file
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
	pid=`ps -eo pid,ppid,comm | egrep " 1 $NAME.py\$" | awk '{print $1}'`
	rm -f $PIDFILE
	if [ -n "$pid" ]; then
	    echo $pid > $PIDFILE
	    RETVAL=0
	else
	    RETVAL=1
	fi
    fi

    action "Starting $NAME: " [ $RETVAL -eq 0 ]
    [ $RETVAL -eq 0 ] && touch $LOCKFILE
    return $RETVAL
}

stop() {
    echo -n "Shutting down $NAME: "
    killproc -p $PIDFILE "$NAME.py"
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && rm -f $LOCKFILE
    return $RETVAL
}

restart() {
    stop
    start
}

# See how we were called
case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    status)
	status $NAME
	RETVAL=$?
	;;
    restart)
	restart
	;;
    condrestart)
	[ -f /var/lock/subsys/$NAME ] && restart || :
	;;
    *)
	echo $"Usage: $0 {start|stop|status|restart|condrestart}"
	exit 1
esac

exit $RETVAL
