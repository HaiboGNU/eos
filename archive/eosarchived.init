#! /bin/sh
#
#-------------------------------------------------------------------------------
# File: eosarchiverd.init
# Author: Elvin-Alin Sindrilaru <esindril@cern.ch>
#-------------------------------------------------------------------------------
#
#*******************************************************************************
# EOS - the CERN Disk Storage System
# Copyright (C) 2014 CERN/Switzerland
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#*******************************************************************************

# Source function library.
. /etc/rc.d/init.d/functions

# Variables
USER="xrootd"
GROUP="xrootd"
NAME="eosarchived"
export DAEMON_COREFILE_LIMIT="unlimited"
# Log level can be one of the following: 
# info, notice, warn/warning, err/error, emerg/panic, debug, crit/critical, alert
export LOG_LEVEL="debug"
export LOG_DIR="/var/log/eos/archive/"
export EOS_ARCHIVE_DIR="/var/eos/archive/"
RETVAL=0

# Source sysconfig files
if [ -f /etc/sysconfig/$NAME ]; then
        . /etc/sysconfig/$NAME
fi

# Create and set ownership on the log directory
mkdir -p $LOG_DIR
chown -R $USER:$GROUP $LOG_DIR

# Create and set ownership on the directory where files for each archive transfer
# are saved by the worker processes. Each process saves 3 files with the following 
# extensions:
#  .tx - the actual archive file copied from EOS 
#  .log - log file for the running transfer
#  .ps - status file for the running transfer
mkdir -p $EOS_ARCHIVE_DIR
chown -R $USER:$GROUP $EOS_ARCHIVE_DIR

start() {
        # Run daemon
        echo -n $"Starting $NAME: "

        cd /var/log/eos/
        daemon --user=$USER /usr/bin/$NAME.py $EOSARCHIVERD_OPTIONS

        # Write the pid to a file.
        RETVAL=$?
        if [ $RETVAL -eq 0 ]; then
                pid=`ps -eo pid,ppid,comm | egrep " 1 $NAME.py\$" | awk '{print $1}'`
                rm -f /var/run/$NAME.pid
                if [ -n "$pid" ]; then
                        echo $pid > /var/run/$NAME.pid
                        RETVAL=0
                else
                        RETVAL=1
                fi
        fi

        [ $RETVAL -eq 0 ] && success $"$base startup" || failure $"$base startup"
        echo
        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$NAME
        return $RETVAL
}

stop() {
        echo -n $"Stopping $NAME: "
        killproc $NAME

        RETVAL=$?
        echo
        [ -f /var/lock/subsys/$NAME ] && rm -f /var/lock/subsys/$NAME
        return $RETVAL
}

restart() {
        stop
        start
}

# See how we were called
case "$1" in

        start)
                start
                ;;
        stop)
                stop
                ;;
        status)
                status $NAME
                RETVAL=$?
                ;;
        restart)
                restart
                ;;
        condrestart)
                [ -f /var/lock/subsys/$NAME ] && restart || :
                ;;
        *)
                echo $"Usage: $0 {start|stop|status|restart|condrestart}"
                exit 1
esac

exit $RETVAL
