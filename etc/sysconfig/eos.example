# ----------------------------------------------------------------------
# File: eos.example
# Author: Andreas-Joachim Peters - CERN
# ----------------------------------------------------------------------

# ************************************************************************
# * EOS - the CERN Disk Storage System                                   *
# * Copyright (C) 2011 CERN/Switzerland                                  *
# *                                                                      *
# * This program is free software: you can redistribute it and/or modify *
# * it under the terms of the GNU General Public License as published by *
# * the Free Software Foundation, either version 3 of the License, or    *
# * (at your option) any later version.                                  *
# *                                                                      *
# * This program is distributed in the hope that it will be useful,      *
# * but WITHOUT ANY WARRANTY; without even the implied warranty of       *
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *
# * GNU General Public License for more details.                         *
# *                                                                      *
# * You should have received a copy of the GNU General Public License    *
# * along with this program.  If not, see <http://www.gnu.org/licenses/>.*
# ************************************************************************

# Should we run with another limit on the core file size other than the default?
DAEMON_COREFILE_LIMIT=unlimited

# Disable the KRB5 replay cache
export KRB5RCACHETYPE=none

# What roles should the xroot daemon run for. For each role you can overwrite
# the default options using a dedicate sysconfig file
# e.g. /etc/sysconfig/xrd.<role>. The role based mechanism allows for
# multiple xrd's running with different options to be controlled via
# the same initd script

XRD_ROLES="mq sync mgm fst fed global-mq"

# ------------------------------------------------------------------
# EOS Configuration
# ------------------------------------------------------------------

# The EOS instance name
export EOS_INSTANCE_NAME=eosdev

# The EOS configuration to load after daemon start
export EOS_AUTOLOAD_CONFIG=default

# The EOS broker URL 
export EOS_BROKER_URL=root://localhost:1097//eos/

# The EOS host geo location tag used to sort hosts into geographical (rack) locations 
export EOS_GEOTAG=""

# The fully qualified hostname of MGM master1
export EOS_MGM_MASTER1=eosdevsrv1.cern.ch

# The fully qualified hostname of MGM master2
export EOS_MGM_MASTER2=eosdevsrv2.cern.ch

# The alias which selects master 1 or 2
export EOS_MGM_ALIAS=eosdev.cern.ch

# The mail notification in case of fail-over
export EOS_MAIL_CC="apeters@mail.cern.ch"
export EOS_NOTIFY="mail -s `date +%s`-`hostname`-eos-notify $EOS_MAIL_CC"

# Enable core dumps initiated internally 
#export EOS_CORE_DUMP

# Disable shutdown/signal handlers for debugging
#export EOS_NO_SHUTDOWN

# Allow UTF-8 path names excluding only CR,LF
#export EOS_UTF8=""

# Add secondary group information from database/LDAP (set to 1 to enable)
#export EOS_SECONDARY_GROUPS=0

# Do subtree accounting on directories (set to 1 to enable)
#export EOS_NS_ACCOUNTING=0

# Do sync time propagation (set to 1 to enable)
#export EOS_SYNCTIME_ACCOUNTING=0

# ------------------------------------------------------------------
# FST Configuration
# ------------------------------------------------------------------

# Disable 'sss' enforcement to allow generic TPC
#export EOS_FST_NO_SSS_ENFORCEMENT=1

# Network interface to monitor (default eth0)
#export EOS_FST_NETWORK_INTERFACE="eth0"

# Stream timeout for operations
#export EOS_FST_STREAM_TIMEOUT=300

# ------------------------------------------------------------------
# FUSE Configuration
# ------------------------------------------------------------------

# The mount directory for 'eosd' 
export EOS_FUSE_MOUNTDIR=/eos/

# The MGM host from where to do the inital mount
export EOS_FUSE_MGM_ALIAS=eosdev.cern.ch

# Enable FUSE debugging mode (default off)
#export EOS_FUSE_DEBUG=1

# Enable FUSE low-level debugging mode (default off)
#export EOS_FUSE_LOWLEVEL_DEBUG=1

# Specify the FUSE logging level (default=6 is LOG_INFO ... see /usr/include/sys/syslog.h LOG_XXX definitions)
# EOS_FUSE_DEBUG=1 overwrites these settings
#export EOS_FUSE_LOGLEVEL=6

# Disable parallel IO mode (default on)
#export EOS_FUSE_NOPIO=1

# Disable multithreading in FUSE (default on)
#export EOS_FUSE_NO_MT=1

# Enable FUSE read-ahead (default off)
#export EOS_FUSE_RDAHEAD=0

# Configure FUSE read-ahead window (default 128k)
#export EOS_FUSE_RDAHEAD_WINDOW=131072

# Disable using access for access permission check (default on)
# export EOS_FUSE_NOACCESS=0

# Disable to use the kernel cache (default on)
# export EOS_FUSE_KERNELCACHE=0

# Bypass the buffercache for write - avoids 4k chopping of IO (default off)
# (this is not what people understand under O_DIRECT !!!!
# export EOS_FUSE_DIRECTIO=1

# Disable the write-back cache (default on)
# export EOS_FUSE_CACHE=0

# Set the write-back cache size (default 300M)
# export EOS_FUSE_CACHE_SIZE=0

# Use the FUSE big write feature ( FUSE >=2.8 ) (default on)
# export EOS_FUSE_BIGWRITES=1

# Mount all files with 'x' bit to be able to run as an executable (default off)
# export EOS_FUSE_EXEC=1

# Enable protection against recursive deletion (rm -r command) 
#    starting from the root of the mount (if 1)
#    or from any of its sub directories at a maximum depth (if >1) (default 1)
# EOS_FUSE_RMLVL_PROTECT=1

# ---------------------------------------------------------------------------------
# this options are not available since AQUAMARINE is compiled with XROOTD3 
# --------------------------------------------------------------------------------- 
# Enable Kerberos authentication. This avoid need to set gateways on the mgm. 
#    file cache credential should be used. (default 0)
# EOS_FUSE_USER_KRB5CC=0
# ---------------------------------------------------------------------------------
# Enable X509 GSI authentication. This avoid need to set gateways on the mgm. 
#    file user proxy should be used. (default 0)
# EOS_FUSE_USER_GSIPROXY=0
# ---------------------------------------------------------------------------------
# If both KRB5 and X509 are enabled, specify if KRB5 should be tried first. 
#    (default 0)
# EOS_FUSE_USER_KRB5FIRST=0
# ---------------------------------------------------------------------------------
# If a connection fails using strong authentication, this is the timeout before actully retrying
#    in the meantime, all access by the concerned user will be rejected (indicating authentication failure)
#    !! WARNING: If a low value is used on a batch machine, it could have an impact on the authentication burden on the server side
#    On interactive servers, it will be the longest time taken between refreshing the credentials and this taking effect on the fuse mount 
#    (default is XRD_STREAMERRORWINDOW default value)
# EOS_FUSE_STREAMERRORWINDOW=1
# ---------------------------------------------------------------------------------
# If KRB5 or X509 are enabled, specify the mapping from pid to strong authentication 
#    should be kept as symlinks under /var/run/eosd/credentials/pidXXXX 
#    (default 0)
# EOS_FUSE_PIDMAP=
# ---------------------------------------------------------------------------------

# Enable the fuse local host time consistency model
#   this allows a more precise handling of mtime. Time reference is then the localhost time
#   this is very useful to use applications massively relying on mtime : e.g. emacs, make, ...
#   this only affects the shared fuse mount (default 1)
#   !! WARNING: it is strongly advised to synchronise the shared mount clock with the eos intance clock to use this !!
# EOS_FUSE_LOCALTIMECONSISTENT=1

# Configure a log-file prefix - useful for several FUSE instances
#export EOS_FUSE_LOG_PREFIX=dev
# => will create /var/log/eos/fuse.dev.log

# Configure multiple FUSE mounts a,b configured in /etc/sysconfig/eos.a /etc/sysconfig/eos.b
#export EOS_FUSE_MOUNTS="a b"

# ------------------------------------------------------------------
# HTTPD Configuration
# ------------------------------------------------------------------
# HTTP uses by default one thread per connection
#export EOS_HTTP_THREADPOOL="threads"

# we use EPOLL and 16 threads 
export EOS_HTTP_THREADPOOL="epoll"
export EOS_HTTP_THREADPOOL_SIZE=16

# memory buffer size per connection 
#export EOS_HTTP_CONNECTION_MEMORY_LIMIT=134217728 (default 128M)
export EOS_HTTP_CONNECTION_MEMORY_LIMIT=4194304
# timeout after which an idel connection is considered to be closed (default 2 min)
#export EOS_HTTP_CONNETION_TIMEOUT=120

# ------------------------------------------------------------------
# Federation Configuration
# ------------------------------------------------------------------

# The host[:port] name of the meta manager (global redirector)
export EOS_FED_MANAGER=eos.cern.ch:1094

# The port of the PSS xrootd server
export EOS_PSS_PORT=1098

# The hostname[:port] of the EOS MGM service
export EOS_PSS_MGM=$EOS_MGM_ALIAS:1094

# The path which should be proxied (/ for all)
export EOS_PSS_PATH=/

# ------------------------------------------------------------------
# Test Configuration
# ------------------------------------------------------------------

# mail notification for failed tests
#export EOS_TEST_MAILNOTIFY=apeters@mail.cern.ch

# SMS notification for failed tests
#export EOS_TEST_GSMNOTIFY="0041764875002@mail2sms.cern.ch"

# Instance name = name of directory at deepness 2 /eos/<instance>/
#export EOS_TEST_INSTANCE="dev"

# MGM host redirector
export EOS_TEST_REDIRECTOR=localhost

# local test output directory
export EOS_TEST_TESTSYS=/tmp/eos-instance-test/

# time to lock re-sending of SMS for consecutively failing tests
export EOS_TEST_GSMLOCKTIME=3600

# max. time given to the test to finish
export EOS_TEST_TESTTIMESLICE=300;

# ------------------------------------------------------------------
# Global Vstl Configuration
# ------------------------------------------------------------------
# define the global broker for subscription
# export EOS_VST_BROKER_URL=root://eos.cern.ch:1099//eos/

# disable subscription to the global broker if desired
# export EOS_VST_BROKER_DISABLE=0

# define which client we trust for querying this MGM
# export EOS_VST_TRUSTED_HOST=eos.cern.ch

# ------------------------------------------------------------------------------
# Archive configuration
# ------------------------------------------------------------------------------

# Set the root destination for all archives beloging to this instance
# export EOS_ARCHIVE_URL=root://castorpps.cern.ch//user/cern.ch/c3/archive/

# Set the CASTOR service class (svcClass) for all file transfers to CASTOR
# export EOS_ARCHIVE_SVCCLASS=default

# ------------------------------------------------------------------
# MGM TTY Console Broadcast Configuration
# ------------------------------------------------------------------

# define the log file where you want to grep
export EOS_TTY_BROADCAST_LISTEN_LOGFILE="/var/log/eos/mgm/xrdlog.mgm"

# define the log file regex you want to broad cast to all consoles
export EOS_TTY_BROACAST_EGREP="\"CRIT|ALERT|EMERG|PROGRESS\""

# ------------------------------------------------------------------
# Service Script aliasing for EL7 machines
# ------------------------------------------------------------------

which systemctl >& /dev/null
if [ $? -eq 0 ]; then
   alias service="service --skip-redirect"
fi

# ------------------------------------------------------------------
# MGM Namespace Preset Size - this can safe memory for large namespaces if you know an upper limit for the namespace size
# ------------------------------------------------------------------
# export EOS_NS_DIR_SIZE=1000000
# export EOS_NS_FILE_SIZE=1000000
