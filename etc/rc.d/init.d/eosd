#!/bin/bash
#
#       /etc/rc.d/init.d/eosd
#
# Starts eosd 
#
# chkconfig: 345 96 6
# description: Starts eosd 
# processname: eosd

# Source function library.

export EOS_ROOT=/usr

. /etc/init.d/functions



if test ! -x ${EOS_ROOT}/sbin/eosd ; then
  echo Error: ${EOS_ROOT}/sbin/eosd does not exist!
  exit 0
fi

[ -e /etc/sysconfig/eos ] && . /etc/sysconfig/eos

RETVAL=0
prog="eosd"

start() {
        # Check if eosd is already running
	echo
        eosdpid=`pgrep -f "${EOS_ROOT}/sbin/eosd "`
	export EOS_NOACCESS=${EOS_NOACCESS-1}
	export EOS_KERNELCACHE=${EOS_KERNELCACHE-1}
        if [ "x$eosdpid" = "x" ]; then
            echo -n "Starting $prog: "
	    mkdir -p /var/run/eosd/
	    cd /var/run/eosd/
	    mkdir -p ${EOS_FUSE_MOUNTDIR-/eos/}
	    chmod -R 755 ${EOS_FUSE_MOUNTDIR-/eos/}
	    unset KRB5CCNAME
	    unset X509_USER_CERT
	    unset X509_USER_KEY
	    ulimit -S -c ${DAEMON_COREFILE_LIMIT:-0}
	    ulimit -n 65000
	    modprobe fuse
            ${EOS_ROOT}/sbin/eosd ${EOS_FUSE_MOUNTDIR-/eos/} -omax_readahead=131072,max_write=4194304,allow_other,url=root://${EOS_FUSE_MGM_ALIAS-eosdev.cern.ch}/${EOS_FUSE_MOUNTDIR-/eos/}//  >& /dev/null 


            RETVAL=$?
	    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/eosd
            [ $RETVAL -eq 0 ] && echo_success;
	    echo
	    echo "EOS_NOACCESS    : ${EOS_NOACCESS}"
	    echo "EOS_KERNELCACHE : ${EOS_KERNELCACHE}"
	else 
            echo eosd already running. Pid is $eosdpid 
            echo Stop it first with 'service eosd stop'
            echo and try again or use directly 'service eosd restart'.
            RETVAL=1
	    echo_warning
        fi
}

stop() {
        echo -n "Stopping $prog: "
	umdir="${EOS_FUSE_MOUNTDIR-/eos/}";
	umount -f -l $umdir >& /dev/null
        pkill -9 -f ${EOS_ROOT}/sbin/eosd
	rm -f /var/lock/subsys/eosd
        echo
	echo_success
	echo
	RETVAL=0;
}


restart() {
        stop
        start
}       

reload() {
        restart
}       

case "$1" in
start)
        start
        ;;
stop)
        stop
        ;;
reload|restart)
        restart
        ;;
condrestart)
        if [ -f /var/lock/subsys/eosd ]; then
            restart
        fi
        ;;
status)
        status $prog
	RETVAL=$?
        ;;
*)
        echo $"Usage: $0 {start|stop|restart|reload|condrestart|status}"
	RETVAL=1
esac

exit $RETVAL
