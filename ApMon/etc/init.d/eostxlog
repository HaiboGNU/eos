#!/bin/bash
#
#       /etc/rc.d/init.d/eostxlog
#
# Starts xrootd 
#
# chkconfig: 345 95 5
# description: Starts txlog to record file transactions on EOS
# processname: eostxlog

# Source function library.
XRDLOCATION="/opt/eos/"
XRDCONFIG="/etc/xrd.cf.fst"
XRDLOGDIR="/var/log/xroot/"
XRDROLE="fst"
XRDUSER="daemon"
. /etc/init.d/functions
. /etc/sysconfig/xrd



if [[ "${XRD_ROLES}" =~ "mgm" ]] ; then 
    XRDROLE="mgm";
    XRDUSER="root"
fi


mkdir -p ${XRDLOGDIR}/${XRDROLE}
chown -R $XRDUSER ${XRDLOGDIR}

prog="eos_tx_log"

if test ! -x ${XRDLOCATION}/bin/$prog ; then
  echo Error: ${XRDLOCATION}/bin/$prog does not exist
  exit 0
fi



RETVAL=0

#
#       See how we were called.
#


host_Group=${HOSTGROUP:-eosatlas}

newline="
"
host=`hostname -f`
xrdpid=`pgrep -u ${XRDUSER} xrootd | tail -1`
cmspid=`pgrep -u ${XRDUSER} cmsd | tail -1`

if [ $xrdpid="" ]; then
    xrdpid=999999
fi

if [ $cmspid="" ]; then
    cmspid=999999
fi
    

 
# if we are a manager we start the namespace monitor
if [[ "${XRD_ROLES}" =~ "mgm" ]] ; then 
    EOSAPMONSTARTUPFILE="${XRDLOCATION}/perl/eos-tx-log.pl"
fi

start() {
        # Check if eostxlog is already running
        if [ ! `pgrep -f -u ${XRDUSER} $prog `  ]; then
            echo -n "Starting $prog: "
	    killall -9 xrdmqdumper 2>/dev/null
            daemon --user ${XRDUSER} "source /etc/sysconfig/xrd; cd ${XRDCOREDIR}; ulimit -c unlimited; export PERL5LIB=${XRDLOCATION}/perl/ApMon; ${XRDLOCATION}/bin/$prog ${EOSAPMONSTARTUPFILE} ${XRDLOGDIR}/${XRDROLE}/eostxlog >& /dev/null < /dev/null" 
            RETVAL=$?
	    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$prog
            echo
	else 
            echo $prog already running.  
            echo Stop it first with 'service $prog stop'
            echo and try again or use directly 'service $prog restart'.
            RETVAL=1
        fi
        return $RETVAL
}

stop() {
        echo -n "Stopping $prog: "
	killall -9 xrdmqdumper 2>/dev/null
        killproc /${XRDLOCATION}/bin/$prog
        RETVAL=$?
        [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$prog
        echo
        return $RETVAL
}


restart() {
        stop
        start
}       

reload() {
        restart
}       

status_at() {
    pid=`pidofproc $prog`
    if [ -n "$pid" ]; then
	echo $"$prog (pid $pid) is running..."
    else
	if [ -f /var/lock/subsys/$prog ]; then
	    echo $"$prog dead but subsys locked"
	else
	    echo $"$prog is stopped"
	fi
	RETVAL=1
    fi
    return $RETVAL
}


case "$1" in
start)
        start
        ;;
stop)
        stop
        ;;
reload|restart)
        restart
        ;;
condrestart)
        if [ -f /var/lock/subsys/$prog ]; then
            restart
        fi
        ;;
status)
        status_at
        ;;
*)
        echo $"Usage: $0 {start|stop|restart|condrestart|status}"
        exit 1
esac

exit $?
exit $RETVAL
