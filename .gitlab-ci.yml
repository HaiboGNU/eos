stages:
  - build:rpm
  - build:dockerimage
  - test

before_script:
  - source gitlab-ci/export_branch.sh
  - echo "Exporting BRANCH=${BRANCH}"

eos_rpm_cc7:
  stage: build:rpm
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install --nogpg -y gcc-c++ cmake3 make rpm-build which git yum-plugin-priorities ccache sssd-client sudo createrepo
    - git submodule update --init --recursive
    - mkdir build
    - cd build
    - cmake3 .. -DPACKAGEONLY=1
    - make srpm
    - cd ..
    - source gitlab-ci/setup_ccache.sh
    - echo -e '[eos-depend]\nname=EOS Dependencies\nbaseurl=http://dss-ci-repo.web.cern.ch/dss-ci-repo/eos/'${BRANCH}'-depend/el-7-x86_64/\ngpgcheck=0\nenabled=1\nexclude=xrootd*\npriority=4\n' >> /etc/yum.repos.d/eos-depend.repo
    - echo -e '\n[kio]\nname=kio\nbaseurl=https://dss-ci-repo.web.cern.ch/dss-ci-repo/kinetic/kineticio/el-7-x86_64\nenabled=1\n' >> /etc/yum.repos.d/eos-depend.repo
    - yum-builddep --nogpgcheck -y build/SRPMS/*
    - rpmbuild --rebuild --with=server --define "_rpmdir build/RPMS/" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" build/SRPMS/*
    - ccache -s
    - mkdir cc7
    - cp -R build/SRPMS cc7
    - cp -R build/RPMS cc7
    - git clone https://gitlab.cern.ch/eos/eos-docker.git
    - echo -e '[eos-depend]\nname=EOS Dependencies\nbaseurl=http://dss-ci-repo.web.cern.ch/dss-ci-repo/eos/'${BRANCH}'-depend/el-7-x86_64/\ngpgcheck=0\nenabled=1\npriority=4\n' > eos-docker/eos.repo
    - echo -e '[xrootd]\nname=XROOTD\nbaseurl=http://dss-ci-repo.web.cern.ch/dss-ci-repo/xrootd/release/cc-7/x86_64/v4.6.0/\ngpgcheck=0\nenabled=1\npriority=4\n' >> eos-docker/eos.repo
    - source gitlab-ci/export_buildtype.sh 24
    - sudo -u stci -H mkdir -p /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/el-7/x86_64
    - sudo -u stci -H cp build/SRPMS/* /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/el-7/x86_64/
    - sudo -u stci -H cp build/RPMS/* /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/el-7/x86_64/
    - sudo -u stci -H createrepo -q /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/el-7/x86_64/
  cache:
    key: "$CI_BUILD_NAME/$CI_BUILD_REF_NAME"
    paths:
    - ccache/
  artifacts:
    expire_in: 2 days
    paths:
    - cc7/
    - eos-docker/
  tags:
    - docker-cc7
  only:
    - master
    - beryl_aquamarine
    - master-ci

eos_rpm_slc6:
  stage: build:rpm
  image: gitlab-registry.cern.ch/linuxsupport/slc6-base
  script:
    - yum install --nogpg -y gcc-c++ cmake3 make rpm-build which git yum-plugin-priorities tar ccache sssd-client sudo authconfig createrepo
    - git submodule update --init --recursive
    - mkdir build
    - cd build
    - cmake3 .. -DPACKAGEONLY=1
    - make srpm
    - cd ..
    - source gitlab-ci/setup_ccache_slc6.sh
    - ccache --max-size=1.5G
    - echo -e '[eos-depend]\nname=EOS Dependencies\nbaseurl=http://dss-ci-repo.web.cern.ch/dss-ci-repo/eos/'${BRANCH}'-depend/el-6-x86_64/\ngpgcheck=0\nenabled=1\nexclude=xrootd*\npriority=4\n' >> /etc/yum.repos.d/eos-depend.repo
    - echo -e '\n[kio]\nname=kio\nbaseurl=https://dss-ci-repo.web.cern.ch/dss-ci-repo/kinetic/kineticio/el-6-x86_64\nenabled=1\n' >> /etc/yum.repos.d/eos-depend.repo
    - yum-builddep --nogpgcheck -y build/SRPMS/*
    - rpmbuild --rebuild --with server --define "_rpmdir build/RPMS/" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" build/SRPMS/*
    - ccache -s
    - authconfig --enablesssd --update
    - source gitlab-ci/export_buildtype.sh 24
    - sudo -u stci -H mkdir -p /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/el-6/x86_64
    - sudo -u stci -H cp build/SRPMS/* /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/el-6/x86_64/
    - sudo -u stci -H cp build/RPMS/* /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/el-6/x86_64/
    - sudo -u stci -H createrepo -q /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/el-6/x86_64/
  cache:
    key: "$CI_BUILD_NAME/$CI_BUILD_REF_NAME"
    paths:
    - ccache/
  tags:
    - docker-slc6
  only:
    - master
    - beryl_aquamarine
    - master-ci

eos_rpm_fedora_rawhide:
  stage: build:rpm
  image: fedora:rawhide
  script:
    - dnf install --nogpg -y gcc-c++ cmake3 make rpm-build which git yum-plugin-priorities tar yum-utils ccache sssd-client sudo createrepo
    - git submodule update --init --recursive
    - mkdir build
    - cd build
    - cmake3 .. -DPACKAGEONLY=1
    - make srpm
    - cd ..
    - source gitlab-ci/setup_ccache_fc.sh
    - echo -e '[xrootd]\nname=XRootD CERN\nbaseurl=http://dss-ci-repo.web.cern.ch/dss-ci-repo/xrootd/release/fc-rawhide/x86_64/\ngpgcheck=0\nenabled=1\npriority=1' >> /etc/yum.repos.d/xrootd.repo
    - yum-builddep --nogpgcheck -y build/SRPMS/*
    - rpmbuild --rebuild --with server --define "_rpmdir build/RPMS/" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" build/SRPMS/*
    - ccache -s
    - source gitlab-ci/export_buildtype.sh 25
    - sudo -u stci -H mkdir -p /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/fc-rawhide/x86_64
    - sudo -u stci -H cp build/SRPMS/* /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/fc-rawhide/x86_64/
    - sudo -u stci -H cp build/RPMS/* /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/fc-rawhide/x86_64/
    - sudo -u stci -H createrepo -q /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/fc-rawhide/x86_64/
  cache:
    key: "$CI_BUILD_NAME/$CI_BUILD_REF_NAME"
    paths:
    - ccache/
  tags:
    - docker-fc_rawhide
  only:
    - master
    - beryl_aquamarine
    - master-ci

eos_rpm_fedora_24:
  stage: build:rpm
  image: fedora:24
  script:
    - dnf install --nogpg -y gcc-c++ cmake3 make rpm-build which git yum-plugin-priorities tar yum-utils ccache sssd-client sudo createrepo
    - git submodule update --init --recursive
    - mkdir build
    - cd build
    - cmake3 .. -DPACKAGEONLY=1
    - make srpm
    - cd ..
    - source gitlab-ci/setup_ccache_fc.sh
    - echo -e '[xrootd]\nname=XRootD CERN\nbaseurl=http://dss-ci-repo.web.cern.ch/dss-ci-repo/xrootd/release/fc-24/x86_64/\ngpgcheck=0\nenabled=1\npriority=1' >> /etc/yum.repos.d/xrootd.repo
    - yum-builddep --nogpgcheck -y build/SRPMS/*
    - rpmbuild --rebuild --with server --define "_rpmdir build/RPMS/" --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" build/SRPMS/*
    - ccache -s
    - source gitlab-ci/export_buildtype.sh 24
    - sudo -u stci -H mkdir -p /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/fc-24/x86_64
    - sudo -u stci -H cp build/SRPMS/* /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/fc-24/x86_64/
    - sudo -u stci -H cp build/RPMS/* /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/fc-24/x86_64/
    - sudo -u stci -H createrepo -q /eos/project/s/storage-ci/www/${BRANCH}/${BUILD_TYPE}/fc-24/x86_64/
  cache:
    key: "$CI_BUILD_NAME/$CI_BUILD_REF_NAME"
    paths:
    - ccache/
  tags:
    - docker-fc25
  only:
    - master
    - beryl_aquamarine
    - master-ci

eos_dmg_macosx:
  stage: build:rpm
  script:
    - git submodule update --init --recursive
    - mkdir build
    - mkdir install
    - cd build
    - /Users/jenkins/workspace/cmake-3.5.2/install/bin/cmake -DCLIENT=1 -DCMAKE_INSTALL_PREFIX=/usr/local -D Z_ROOT_DIR=/usr/local/opt/zlib/ -D OPENSSL_ROOT_DIR=/usr/local/opt/openssl/ -D NCURSES_ROOT_DIR=/usr/local/opt/ncurses/ -D ZMQ_ROOT_DIR=/usr/local/opt/zmqpp/include/zmqpp/ -D XROOTD_ROOT_DIR=/Users/jenkins/workspace/xrootd-latest/install/usr/local/ ..
    - make -j 4
    - make install DESTDIR=../install/
    - version=`../genversion.sh`
    - ../utils/eos-osx-package.sh $version /Users/jenkins/workspace/xrootd-latest/build/ ../install/
    - ccache -s
    - cd ..
    - mkdir osx
    - cp build/*.dmg osx
  artifacts:
    expire_in: 2 days
    paths:
    - osx/
  tags:
    - macosx-shell
  only:
    - master
    - beryl_aquamarine
    - master-ci

eos_docker:
  stage: build:dockerimage
  tags:
    - docker-image-build
  script:
    - ""
  variables:
    TO: gitlab-registry.cern.ch/dss/eos:${CI_PIPELINE_ID}
    DOCKER_FILE: eos-docker/Dockerfile
  dependencies:
    - eos_rpm_cc7
  only:
    - master
    - beryl_aquamarine
    - master-ci

eos_system_test:
  stage: test
  script:
    - sudo ./eos-docker/scripts/shutdown_services.sh
    - ./eos-docker/scripts/remove_unused_images.sh
    - docker pull gitlab-registry.cern.ch/dss/eos:${CI_PIPELINE_ID}
    - sudo ./eos-docker/scripts/start_services.sh -i gitlab-registry.cern.ch/dss/eos:${CI_PIPELINE_ID}
    - docker ps -a
    - docker exec -i eos-mgm-test eos fs ls
    - sudo ./eos-docker/scripts/shutdown_services.sh
    - docker rmi gitlab-registry.cern.ch/dss/eos:${CI_PIPELINE_ID}
  tags:
    - shell-with-docker
  only:
    - master
    - beryl_aquamarine
    - master-ci

